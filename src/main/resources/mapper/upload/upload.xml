<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roadscanner.dao.upload">
  
  <!-- 피드백 월별 그래프 -->
  <select id="monthlyFeedback" parameterType="FileUploadVO" resultType="FileUploadVO">
    SELECT
		    TO_CHAR(upload_date, 'MM/DD') AS uploadDate,
		    COUNT(DECODE(u1, 1, 1)) AS u1,
		    COUNT(DECODE(u2, 1, 1)) AS u2
		FROM
		    upload_image
		WHERE TO_CHAR(upload_date, 'MM') = TO_CHAR(TO_DATE(#{uploadDate}), 'MM')
		GROUP BY TO_CHAR(upload_date, 'MM/DD')
		ORDER BY uploadDate
  </select>
  
  <!-- 피드백 누적 그래프, 표 -->
  <select id="totalFeedback" resultType="FileUploadVO">
    SELECT
        COUNT(DECODE(u1, 1, 1)) AS u1,
        COUNT(DECODE(u2, 1, 1)) AS u2
    FROM
        upload_image
  </select>
  
  <!-- 카테고리별 사진 목록 조회 -->
  <select id="doRetrieveByCategory" parameterType="FileUploadVO" resultType="FileUploadVO">
		SELECT A.*, B.*
		    FROM (
		        SELECT
		            TT1.rnum AS num,
		            TT1.category,
		            TT1.name,
		            TT1.url
		        FROM (
		            SELECT ROWNUM AS rnum, T1.*
		            FROM (
		                SELECT *
		                FROM upload_image
		                WHERE category = #{category}
		                AND checked = 0
		                ORDER BY upload_date DESC
		            )T1
		            <![CDATA[ WHERE ROWNUM <= #{pageSize} * (#{pageNo} - 1) + #{pageSize} ]]>
		        )TT1
		        <![CDATA[ WHERE rnum >= #{pageSize} * (#{pageNo} - 1) + 1 ]]>
		    )A
		    CROSS JOIN
		    (
		        SELECT COUNT(*) AS totalCnt
		        FROM upload_image
		        WHERE category = #{category}
		        AND checked = 0
		    )B
  </select>
  
  <!-- 업로드된 사진 전체 목록 조회 (카테고리: 10, 20, 30) -->
  <select id="doRetrieve" parameterType="FileUploadVO" resultType="FileUploadVO">
		SELECT A.*, B.*
		    FROM (
		        SELECT
		            TT1.rnum AS num,
		            TT1.category,
		            TT1.name,
		            TT1.url
		        FROM (
		            SELECT ROWNUM AS rnum, T1.*
		            FROM (
		            SELECT *
		                FROM upload_image
		                WHERE category in (10, 20, 30)
		                AND checked = 0
		                ORDER BY upload_date DESC
		            )T1
		            <![CDATA[ WHERE ROWNUM <= #{pageSize} * (#{pageNo} - 1) + #{pageSize} ]]>
		        )TT1
		        <![CDATA[ WHERE rnum >= #{pageSize} * (#{pageNo} - 1) + 1 ]]>
		    )A
		    CROSS JOIN
		    (
		        SELECT COUNT(*) AS totalCnt
		        FROM upload_image
		        WHERE category in (10, 20, 30)
		        AND checked = 0
		    )B
  </select>
  
  <!-- 사진 상세 조회 -->
  <select id="doSelectOne" parameterType="FileUploadVO" resultType="FileUploadVO">
    SELECT
        idx,
        id,
        category,
        TO_CHAR(upload_date, 'YYYY-MM-DD HH24:MI:SS') AS uploadDate,
        name,
        url,
        file_size AS fileSize,
        checked,
        u1,
        u2
    FROM
        upload_image
    WHERE
        name = #{name}
  </select>
  
  <!-- 사진 수정 -->
  <update id="doUpdate" parameterType="FileUploadVO">
    UPDATE upload_image
    SET
      url      = #{url},
      category = #{category},
      checked  = #{checked},
      u1       = #{u1},
      u2       = #{u2}
    WHERE
      name = #{name}
  </update>
  
  <!-- 사진 삭제 -->
  <delete id="doDelete" parameterType="FileUploadVO">
    DELETE FROM upload_image
    WHERE name = #{name}
  </delete>
  
  <!-- 사진 업로드 -->
  <insert id="doSave" parameterType="FileUploadVO">
    INSERT INTO upload_image (
        idx,
        id,
        category,
        upload_date,
        name,
        url,
        file_size,
        checked
    ) VALUES (
        upload_seq.NEXTVAL, <!-- upload_seq.NEXTVAL -->
        #{id},
        10,
        SYSDATE,
        #{name},
        #{url},
        #{fileSize},
        0
    )
  </insert>

</mapper>