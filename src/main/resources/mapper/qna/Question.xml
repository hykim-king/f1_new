<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roadscanner.dao.qna.QuestionDAO">

    <!-- 오라클 insert 확인 O-->
    <insert id="save">
        insert into QUESTION(category, id, title, content, original_filename, store_filename, image_url)
        VALUES (#{category}, #{id}, #{title}, #{content}, #{originalFilename}, #{storeFilename}, #{imageUrl})
    </insert>

    <!-- no로 질문 조회 오라클 O-->
    <select id="findByNo" resultType="QuestionVO">
        SELECT
            no,
            category,
            views,
            id,
            title,
            content,
            create_date AS createDate,
            update_date AS updateDate,
            image_url AS imageUrl
        FROM QUESTION
        WHERE no = #{no}
    </select>

    <!-- 모든 질문 조회 -->
    <select id="findAll" resultType="QuestionVO">
        SELECT *
        FROM (
            SELECT a.*, rownum rnum
            FROM (
                SELECT
                    no,
                    category,
                    views,
                    id,
                    title,
                    content,
                    create_date AS createDate,
                    update_date AS updateDate
                FROM QUESTION

                WHERE 1=1
                <if test="searchCond.category == null">
                    AND category != 10
                </if>
                <if test="searchCond.category != null">
                    AND category = #{searchCond.category}
                </if>
                <if test="searchCond.searchType == 'title' and searchCond.keyword != null">
                    AND title LIKE '%' || #{searchCond.keyword} || '%'
                </if>
                <if test="searchCond.searchType == 'content' and searchCond.keyword != null">
                    AND content LIKE '%' || #{searchCond.keyword} || '%'
                </if>
                <if test="searchCond.searchType == 'both' and searchCond.keyword != null">
                    AND (title LIKE '%' || #{searchCond.keyword} || '%' OR content LIKE '%' || #{searchCond.keyword} || '%')
                </if>
                ORDER BY no DESC
            ) a WHERE rownum &lt;= #{pagination.start} + #{pagination.size}
        ) WHERE rnum &gt; #{pagination.start}
    </select>

    <!-- 질문 업데이트 -->
    <update id="update">
        UPDATE QUESTION
        SET
            category = #{category},
--             image_url = #{imageURL},
            title = #{title},
            content = #{content},
            update_date = CURRENT_TIMESTAMP
        WHERE no = #{no}
    </update>

    <!-- 질문 삭제 -->
    <delete id="delete">
        DELETE FROM QUESTION WHERE no = #{no}
    </delete>

    <!-- 조건에 해당하는 게시글 개수 -->
    <select id="countQuestions" resultType="int">
        SELECT count(*) FROM question
        WHERE 1=1
        <if test="category != null">
            AND category = #{category}
        </if>
        <if test="searchType == 'title' and keyword != null">
            AND title LIKE '%' || #{keyword} || '%'
        </if>
        <if test="searchType == 'content' and keyword != null">
            AND content LIKE '%' || #{keyword} || '%'
        </if>
        <if test="searchType == 'both' and keyword != null">
            AND (title LIKE '%' || #{keyword} || '%' OR content LIKE '%' || #{keyword} || '%')
        </if>
    </select>

    <!-- 조회수 증가 -->
    <update id="increaseViews">
        UPDATE QUESTION
        SET views = views + 1
        WHERE no = #{no}
    </update>

    <!-- 답변 등록 시 카테고리 변경 -->
    <update id="updateCategory">
        UPDATE question
        SET category = (
            CASE
                WHEN EXISTS (SELECT 1 FROM answer WHERE question.no = answer.no)
                    THEN 20
                ELSE 30
                END
            )
        WHERE no = #{no}
    </update>

    <!-- 공지사항 조회 -->
    <select id="findNotice" resultType="QuestionVO">
        SELECT
            no,
            category,
            views,
            id,
            title,
            content,
            create_date AS createDate,
            update_date AS updateDate
        FROM QUESTION
        WHERE category = 10
        ORDER BY no DESC
        FETCH FIRST 3 ROWS ONLY
    </select>

</mapper>
